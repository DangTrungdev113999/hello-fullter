double bai1(List<int> inputs) {
  double sum = 0;
  for (int i = 0; i < inputs.length; i++) {
    sum += inputs[i];
  }
  return sum / inputs.length;
}

void bai2(List<int> inputs) {
  int max = 0;
  int min = 0;
  for (int i = 0; i < inputs.length; i++) {
    if (inputs[i] > max) {
      max = inputs[i];
    }

    if (inputs[i] < min) {
      min = inputs[i];
    }
  }
  print('GTLN: $max, GTNN: $min');
}

void bai3(List<int> inputs) {
  Map<int, int> mapToCheck = {};
  for (int i = 0; i < inputs.length; i++) {
    if (mapToCheck.containsKey(inputs[i])) {
      mapToCheck[inputs[i]] = mapToCheck[inputs[i]]! + 1;
    } else {
      mapToCheck[inputs[i]] = 1;
    }
  }

  Map<int, String> result =
      mapToCheck.map((key, value) => MapEntry(key, '$key: $value l·∫ßn'));
  print(result.values.toList().join(', '));
}

void main(List<String> args) {
//üî• Cho 1 m·∫£ng g·ªìm n ph·∫ßn t·ª≠, vi·∫øt h√†m t√≠nh gi√° tr·ªã trung b√¨nh c·ªßa m·∫£ng ƒë√≥
// VD: List<int> inputs = [1,2,3,4,5,6,7,8,9,10], gi√° tr·ªã trung b√¨nh = 55 / 10.
  List<int> inputs = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];
  print(bai1(inputs));

//üî• Cho 1 m·∫£ng g·ªìm n ph·∫ßn t·ª≠, vi·∫øt h√†m t√¨m gi√° tr·ªã l·ªõn nh·∫•t, gi√° tr·ªã nh·ªè nh·∫•t c·ªßa m·∫£ng ƒë√≥.
// VD: List<int> inputs = [10,7,8,9,4,6,2,3,1,5], GTNN: 1,  GTLN: 10
  List<int> inputs2 = [10, 7, 8, 9, 4, 6, 2, 3, 1, 5];
  bai2(inputs2);

//üî• Cho 1 m·∫£ng g·ªìm n ph·∫ßn t·ª≠ v·ªõi c√°c ph·∫ßn t·ª≠ b·ªã tr√πng, vi·∫øt h√†m t√¨m ra t·ª´ng gi√° tr·ªã v·ªõi t·ª´ng l·∫ßn xu·∫•t hi·ªán c·ªßa gi√° tr·ªã.
// VD: List<int> inputs = [1,2,3,4,5,6,1,1,2], k·∫øt qu·∫£ mong mu·ªën:
//    - 1: 3 l·∫ßn, 2: 2 l·∫ßn, 3: 1 l·∫ßn‚Ä¶.

  List<int> inputs3 = [1, 2, 3, 4, 5, 6, 1, 1, 2];
  bai3(inputs3);

//üî• Cho 1 m·∫£ng g·ªìm n ph·∫ßn t·ª≠, vi·∫øt h√†m ƒë·∫øm s·ªë l∆∞·ª£ng s·ªë ch·∫µn, s·ªë l·∫ª
// VD: List<int> inputs = [0,1,2,3,4,5,6], S·ªë ch·∫µn: 4 s·ªë, S·ªë l·∫ª: 3
  List<int> inputs4 = [0, 1, 2, 3, 4, 5, 6];
  int countEven = 0;
  int countOdd = 0;
  for (int i = 0; i < inputs4.length; i++) {
    if (inputs4[i] % 2 == 0) {
      countEven++;
    } else {
      countOdd++;
    }
  }
  print('S·ªë ch·∫µn: $countEven s·ªë, S·ªë l·∫ª: $countOdd s·ªë');
}
